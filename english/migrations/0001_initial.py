# Generated by Django 5.2.6 on 2025-09-18 04:35

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Название курса')),
                ('description', models.TextField(verbose_name='Описание курса')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
                'db_table': 'courses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('order_index', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Порядковый номер')),
                ('exercise_type', models.CharField(choices=[('text_input', 'Ввод текста'), ('textarea_input', 'Ввод Эссе')], max_length=255, verbose_name='Тип упражнения')),
            ],
            options={
                'verbose_name': 'Упражнение',
                'verbose_name_plural': 'Упражнения',
                'db_table': 'exercises',
                'ordering': ['topic', 'order_index'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('phone_number', models.CharField(max_length=255, unique=True, verbose_name='Номер телефона')),
                ('tg_id', models.IntegerField(unique=True, verbose_name='Telegram ID')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='Доступ в админку')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Суперпользователь')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('order_index', models.BigIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Порядковый номер')),
                ('name', models.CharField(max_length=255, verbose_name='Название главы')),
                ('passing_ball', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Проходной балл')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='english.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Глава',
                'verbose_name_plural': 'Главы',
                'db_table': 'chapter',
                'ordering': ['course', 'order_index'],
                'unique_together': {('course', 'order_index')},
            },
        ),
        migrations.CreateModel(
            name='CourseTariff',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Название тарифа')),
                ('description', models.TextField(verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Цена')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tariffs', to='english.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Тариф курса',
                'verbose_name_plural': 'Тарифы курсов',
                'db_table': 'course_tariff',
                'unique_together': {('course', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Сумма')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('receipt', models.CharField(max_length=255, verbose_name='Чек')),
                ('status', models.CharField(choices=[('pending', 'Ожидает оплаты'), ('paid', 'Оплачен'), ('failed', 'Ошибка'), ('cancelled', 'Отменен'), ('refunded', 'Возвращен')], default='pending', max_length=255, verbose_name='Статус платежа')),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='english.coursetariff', verbose_name='Тариф')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
                'db_table': 'payment',
                'ordering': ['-create_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('text', models.TextField(verbose_name='Текст вопроса')),
                ('correct_answer', models.JSONField(verbose_name='Правильный ответ')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='english.exercise', verbose_name='Упражнение')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('order_index', models.BigIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Порядковый номер')),
                ('is_public', models.BooleanField(default=False, verbose_name='Публичная тема')),
                ('name', models.CharField(max_length=255, verbose_name='Название темы')),
                ('video_path', models.CharField(max_length=255, verbose_name='Путь к видео')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='english.chapter', verbose_name='Глава')),
            ],
            options={
                'verbose_name': 'Тема',
                'verbose_name_plural': 'Темы',
                'db_table': 'topic',
                'ordering': ['chapter', 'order_index'],
                'unique_together': {('chapter', 'order_index')},
            },
        ),
        migrations.AddField(
            model_name='exercise',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='english.topic', verbose_name='Тема'),
        ),
        migrations.AlterUniqueTogether(
            name='exercise',
            unique_together={('topic', 'order_index')},
        ),
        migrations.CreateModel(
            name='UserChapter',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=False, verbose_name='Активная глава')),
                ('is_open', models.BooleanField(default=False, verbose_name='Открытая глава')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_chapters', to='english.chapter', verbose_name='Глава')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_chapters', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Пользователь и глава',
                'verbose_name_plural': 'Пользователи и главы',
                'db_table': 'users_and_chapters',
                'unique_together': {('user', 'chapter')},
            },
        ),
        migrations.CreateModel(
            name='UserQuestion',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_answer', models.TextField(verbose_name='Ответ пользователя')),
                ('is_correct', models.BooleanField(blank=True, null=True, verbose_name='Правильный ответ')),
                ('answered_at', models.DateTimeField(verbose_name='Время ответа')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to='english.question', verbose_name='Вопрос')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ответ пользователя',
                'verbose_name_plural': 'Ответы пользователей',
                'db_table': 'users_and_questions',
                'ordering': ['-answered_at'],
                'unique_together': {('user', 'question')},
            },
        ),
    ]
